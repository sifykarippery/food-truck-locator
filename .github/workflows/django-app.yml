name: Python Django application(CI/CD)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  DjangoApp-check:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app_check
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Setup Pipenv
      run: pip install pipenv
    - name: Install dependencies
      run: |
        pipenv install

    - name: Install dependencies dev
      run: |
        pipenv install --dev
    - name: Installing psql client
      run: |
        sudo apt-get install --yes --no-install-recommends postgresql-client
    - name: checking database
      run:  psql -h localhost -U postgres -c 'CREATE DATABASE app_check'
      env:
        PGPASSWORD: postgres
        
    - name: Run Migrations # run migrations to create table in side car db container
      run: |
        cd food_truck_locator
        pipenv run python manage.py migrate
      env:
        DB_NAME : app_check
        DB_USER : postgres
        DB_USER_PASSWORD : postgres
        DB_HOST : localhost
        DB_PORT : 5432
    - name: load sample data# run migrations to create table in side car db container
      env:
        DB_NAME : app_check
        DB_USER : postgres
        DB_USER_PASSWORD : postgres
        DB_HOST : localhost
        DB_PORT : 5432
      run:  |
        cd food_truck_locator
        pipenv run python manage.py import_truck_data
    - name: Run pyest
      env:
        DB_NAME : app_check
        DB_USER : postgres
        DB_USER_PASSWORD : postgres
        DB_HOST : localhost
        DB_PORT : 5432
      run: |
        cd food_truck_locator
        pipenv run python manage.py test
